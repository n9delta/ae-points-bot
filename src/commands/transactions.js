const { SlashCommandBuilder } = require('@discordjs/builders');
const { MessageEmbed } = require('discord.js');

const { Transactions } = require('./../db/dbObjects.js');

module.exports = {
	data: new SlashCommandBuilder()
		.setName('transactions')
		.setDescription('–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç—Ä–∞–Ω–∫–∑–∞–∫—Ü–∏—è—Ö')
		.addSubcommand(sb =>
			sb.setName('get')
				.setDescription('–ü–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ç—Ä–∞–Ω–∫–∑–∞–∫—Ü–∏–∏')
				.addIntegerOption(o =>
					o.setName('amount')
						.setDescription('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∫–∑–∞–∫—Ü–∏–π')
						.setRequired(true)))
		.addSubcommand(sb =>
			sb.setName('info')
				.setDescription('–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–¥–Ω–æ–π —Ç—Ä–∞–Ω–∫–∑–∞–∫—Ü–∏–∏')
				.addIntegerOption(o =>
					o.setName('id')
						.setDescription('–ê–π–¥–∏ —Ç—Ä–∞–Ω–∫–∑–∞–∫—Ü–∏–∏')
						.setRequired(true))),
	async execute(client, i) {
		if (i.options.getSubcommand() == 'get') {
			const transactions = await Transactions.findAll({});

			const args = {
				amount: i.options.getInteger('amount') > transactions.length ? transactions.length : i.options.getInteger('amount'),
			};

			if (args.amount <= 0) {
				const embed = new MessageEmbed()
					.setColor('#D0021B')
					.setDescription(`üî¥ **–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∫–∑–∞–∫—Ü–∏–π!**`);
		
				return await i.reply({ embeds: [embed] });
			}

			let embeds = [];
			for (const [j, trans] of transactions.entries()) {
				const user = await client.users.fetch(trans.user);

				const embed = new MessageEmbed()
					.setColor('#3889C4')
					.setAuthor({ name: `${user.username} | ID: ${trans.id}`, iconURL: user.displayAvatarURL() })
					.setDescription(`**${trans.points > 0 ? '–î–æ–±–∞–≤–∏–ª' : '–û—Ç–Ω—è–ª —É'} <@${trans.target}> \`${Math.abs(trans.points)}\` –ø–æ–∏–Ω—Ç–æ–≤!**${trans.comment ? `\n\n**–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:** \`${trans.comment}\`` : ''}`);
			
				embeds.push(embed);

				if (j % 10 == 9 || (args.amount < 10 && j == args.amount-1)) {
					j < 10 ? await i.reply({ embeds: embeds }) : await i.followUp({ embeds: embeds });
					embeds = [];
				}
			}
		}

		if (i.options.getSubcommand() == 'info') {
			const args = {
				id: i.options.getInteger('id')
			};

			const trans = await Transactions.findOne({ where: { id: args.id } });

			if (trans) {
				const user = await client.users.fetch(trans.user);

				const embed = new MessageEmbed()
					.setColor('#3889C4')
					.setAuthor({ name: `${user.username} | ID: ${trans.id}`, iconURL: user.displayAvatarURL() })
					.setDescription(`**${trans.points > 0 ? '–î–æ–±–∞–≤–∏–ª' : '–û—Ç–Ω—è–ª —É'} <@${trans.target}> \`${Math.abs(trans.points)}\` –ø–æ–∏–Ω—Ç–æ–≤!**${trans.comment ? `\n\n**–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:** \`${trans.comment}\`` : ''}`);
			
		
				return await i.reply({ embeds: [embed] });
			}

			const embed = new MessageEmbed()
					.setColor('#D0021B')
					.setDescription(`üî¥ **–¢—Ä–∞–Ω–∫–∑–∞–∫—Ü–∏–∏ —Å —Ç–∞–∫–∏–º –∞–π–¥–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!**`);
		
			await i.reply({ embeds: [embed] });
		}		
	},
};